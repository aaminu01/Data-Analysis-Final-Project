<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2019 Happiness Data (2019 Happiness data_2)' inline='true' name='federated.1pu5k6n1opqw2g1b9vdfx06oc0br' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2019 Happiness data_2' name='excel-direct.0voit9s04zhttq0zqgz8w18nt4e6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/julie/Documents/NIYO Data Analysis/FINAL PROJECT/2019 Happiness data_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0voit9s04zhttq0zqgz8w18nt4e6' name='2019 Happiness Data' table='[&apos;2019 Happiness Data$&apos;]' type='table'>
          <columns gridOrigin='A1:I157:no:A1:I157:0' header='yes' outcome='6'>
            <column datatype='integer' name='Overall rank' ordinal='0' />
            <column datatype='string' name='Country or region' ordinal='1' />
            <column datatype='real' name='Score' ordinal='2' />
            <column datatype='real' name='GDP per capita' ordinal='3' />
            <column datatype='real' name='Social support' ordinal='4' />
            <column datatype='real' name='Healthy life expectancy' ordinal='5' />
            <column datatype='real' name='Freedom to make life choices' ordinal='6' />
            <column datatype='real' name='Generosity' ordinal='7' />
            <column datatype='real' name='Perceptions of corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0voit9s04zhttq0zqgz8w18nt4e6' name='2019 Happiness Data' table='[&apos;2019 Happiness Data$&apos;]' type='table'>
          <columns gridOrigin='A1:I157:no:A1:I157:0' header='yes' outcome='6'>
            <column datatype='integer' name='Overall rank' ordinal='0' />
            <column datatype='string' name='Country or region' ordinal='1' />
            <column datatype='real' name='Score' ordinal='2' />
            <column datatype='real' name='GDP per capita' ordinal='3' />
            <column datatype='real' name='Social support' ordinal='4' />
            <column datatype='real' name='Healthy life expectancy' ordinal='5' />
            <column datatype='real' name='Freedom to make life choices' ordinal='6' />
            <column datatype='real' name='Generosity' ordinal='7' />
            <column datatype='real' name='Perceptions of corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I157:no:A1:I157:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overall rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overall rank]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Overall rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country or region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country or region]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Country or region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per capita]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>GDP per capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social support]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Social support</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy life expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy life expectancy]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Healthy life expectancy</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom to make life choices]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Freedom to make life choices</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions of corruption]</local-name>
            <parent-name>[2019 Happiness Data]</parent-name>
            <remote-alias>Perceptions of corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[GDP per capita (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[GDP per capita]' peg='0' size='0.091' />
      </column>
      <column datatype='real' name='[GDP per capita]' role='measure' type='quantitative' />
      <column datatype='real' name='[Healthy life expectancy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Score]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='2019 Happiness Data' datatype='table' name='[__tableau_internal_object_id__].[2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077]' role='measure' type='quantitative' />
      <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Healthy life expectancy]' derivation='Sum' name='[sum:Healthy life expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country or region:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#1fad80'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#20af84'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#22ac7a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#22b089'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#24b28e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#25ab75'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#26b392'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#27b597'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#28aa6f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#29b69c'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#2bb8a0'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#2db9a5'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#2eb7bf'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#2fbaa9'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#2fbaa9'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#2fbaaa'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#31a65f'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#31bcae'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#32bcbe'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#33bdb3'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#34a55a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#34bfb7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#35bebd'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#36c0bc'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#37a454'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#38a452'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#38a452'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#39a34f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#3ca249'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#3fa144'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#429f3f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#479f3a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#50a138'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a436'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#62a634'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#6ca832'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#75ab30'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#7773c0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#7ead2e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8670c2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#87af2c'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8b6fc3'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#906ec3'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#91b22b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#956ec3'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9ab429'>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
            </map>
            <map to='#9b6ec3'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a06dc2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a3b627'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a66dc2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a76dc2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a76dc2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ab6cc1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#acb925'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b06cc1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b5bb23'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b66bc0'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bb6bc0'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bdbc21'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c16abf'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#c2bc21'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#c66abf'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#c6bc21'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#cbbb21'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#d0bb21'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d169be'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4bb21'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d669bd'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d96abc'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d9bb21'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#dc6cba'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#deba21'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#df302a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#df3227'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#df6db9'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e1312f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e13825'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e33f24'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e43338'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e54522'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e6343c'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e74b20'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#e74b21'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e74b21'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e7ba21'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e83541'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#e93646'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e9511f'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e972b4'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#eb374a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#eb581d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ec374f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ec73b2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ed5e1b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ee3853'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ef641a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ef75b1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f03958'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f075b0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f075b0'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f0b921'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f13a5c'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f16b18'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f33b61'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f37117'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f43f66'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#f5446c'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f57715'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f577ae'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f5b921'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f64971'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f64e77'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f7537c'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#f77d13'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f85882'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f879ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f88313'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f88714'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f88b15'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f89016'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f89417'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f89818'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f8a11b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f8a61c'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f8a61c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f8aa1d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f8ae1e'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f8b21f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f8b720'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f95d87'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f9618d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fa6692'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fb6b98'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fb7aab'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fc709d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fd75a3'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fd7aa8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2019 Happiness Data' id='2019 Happiness Data_1A4EBBBAEA154A6DA342C0D5BB70D077'>
            <properties context=''>
              <relation connection='excel-direct.0voit9s04zhttq0zqgz8w18nt4e6' name='2019 Happiness Data' table='[&apos;2019 Happiness Data$&apos;]' type='table'>
                <columns gridOrigin='A1:I157:no:A1:I157:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Overall rank' ordinal='0' />
                  <column datatype='string' name='Country or region' ordinal='1' />
                  <column datatype='real' name='Score' ordinal='2' />
                  <column datatype='real' name='GDP per capita' ordinal='3' />
                  <column datatype='real' name='Social support' ordinal='4' />
                  <column datatype='real' name='Healthy life expectancy' ordinal='5' />
                  <column datatype='real' name='Freedom to make life choices' ordinal='6' />
                  <column datatype='real' name='Generosity' ordinal='7' />
                  <column datatype='real' name='Perceptions of corruption' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='2020 Happiness Data' inline='true' name='federated.1evd1u91y6hr8b1306qae1vnir5u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020 Happiness Data' name='textscan.0df5mw11v3u59419pioi70e156kv'>
            <connection class='textscan' directory='C:/Users/julie/Downloads' filename='2020 Happiness Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0df5mw11v3u59419pioi70e156kv' name='2020 Happiness Data.csv' table='[2020 Happiness Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Country name' ordinal='0' />
            <column datatype='string' name='Regional indicator' ordinal='1' />
            <column datatype='real' name='Ladder score' ordinal='2' />
            <column datatype='real' name='Standard error of ladder score' ordinal='3' />
            <column datatype='real' name='upperwhisker' ordinal='4' />
            <column datatype='real' name='lowerwhisker' ordinal='5' />
            <column datatype='real' name='Logged GDP per capita' ordinal='6' />
            <column datatype='real' name='Social support' ordinal='7' />
            <column datatype='real' name='Healthy life expectancy' ordinal='8' />
            <column datatype='real' name='Freedom to make life choices' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Perceptions of corruption' ordinal='11' />
            <column datatype='real' name='Ladder score in Dystopia' ordinal='12' />
            <column datatype='real' name='Explained by: Log GDP per capita' ordinal='13' />
            <column datatype='real' name='Explained by: Social support' ordinal='14' />
            <column datatype='real' name='Explained by: Healthy life expectancy' ordinal='15' />
            <column datatype='real' name='Explained by: Freedom to make life choices' ordinal='16' />
            <column datatype='real' name='Explained by: Generosity' ordinal='17' />
            <column datatype='real' name='Explained by: Perceptions of corruption' ordinal='18' />
            <column datatype='real' name='Dystopia + residual' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0df5mw11v3u59419pioi70e156kv' name='2020 Happiness Data.csv' table='[2020 Happiness Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Country name' ordinal='0' />
            <column datatype='string' name='Regional indicator' ordinal='1' />
            <column datatype='real' name='Ladder score' ordinal='2' />
            <column datatype='real' name='Standard error of ladder score' ordinal='3' />
            <column datatype='real' name='upperwhisker' ordinal='4' />
            <column datatype='real' name='lowerwhisker' ordinal='5' />
            <column datatype='real' name='Logged GDP per capita' ordinal='6' />
            <column datatype='real' name='Social support' ordinal='7' />
            <column datatype='real' name='Healthy life expectancy' ordinal='8' />
            <column datatype='real' name='Freedom to make life choices' ordinal='9' />
            <column datatype='real' name='Generosity' ordinal='10' />
            <column datatype='real' name='Perceptions of corruption' ordinal='11' />
            <column datatype='real' name='Ladder score in Dystopia' ordinal='12' />
            <column datatype='real' name='Explained by: Log GDP per capita' ordinal='13' />
            <column datatype='real' name='Explained by: Social support' ordinal='14' />
            <column datatype='real' name='Explained by: Healthy life expectancy' ordinal='15' />
            <column datatype='real' name='Explained by: Freedom to make life choices' ordinal='16' />
            <column datatype='real' name='Explained by: Generosity' ordinal='17' />
            <column datatype='real' name='Explained by: Perceptions of corruption' ordinal='18' />
            <column datatype='real' name='Dystopia + residual' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country name]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Country name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Regional indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Regional indicator]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Regional indicator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ladder score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ladder score]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Ladder score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard error of ladder score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard error of ladder score]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Standard error of ladder score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upperwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[upperwhisker]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>upperwhisker</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lowerwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lowerwhisker]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>lowerwhisker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Logged GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Logged GDP per capita]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Logged GDP per capita</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social support]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Social support</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy life expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy life expectancy]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Healthy life expectancy</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom to make life choices]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Freedom to make life choices</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions of corruption]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Perceptions of corruption</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ladder score in Dystopia</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ladder score in Dystopia]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Ladder score in Dystopia</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Log GDP per capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Log GDP per capita]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Log GDP per capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Social support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Social support]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Social support</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Healthy life expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Healthy life expectancy]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Healthy life expectancy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Freedom to make life choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Freedom to make life choices]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Freedom to make life choices</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Generosity]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Generosity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained by: Perceptions of corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained by: Perceptions of corruption]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Explained by: Perceptions of corruption</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia + residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia + residual]</local-name>
            <parent-name>[2020 Happiness Data.csv]</parent-name>
            <remote-alias>Dystopia + residual</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2020 Happiness Data.csv' datatype='table' name='[__tableau_internal_object_id__].[2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5]' role='measure' type='quantitative' />
      <column caption='Lowerwhisker' datatype='real' name='[lowerwhisker]' role='measure' type='quantitative' />
      <column caption='Upperwhisker' datatype='real' name='[upperwhisker]' role='measure' type='quantitative' />
      <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country name:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#2fbaa9'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#2fbaa9'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#38a452'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#38a452'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a76dc2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a76dc2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e74b21'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e74b21'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f075b0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f075b0'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f8a61c'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f8a61c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2020 Happiness Data.csv' id='2020 Happiness Data.csv_DED465F22AF24285B2BB9C4D610253C5'>
            <properties context=''>
              <relation connection='textscan.0df5mw11v3u59419pioi70e156kv' name='2020 Happiness Data.csv' table='[2020 Happiness Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='Country name' ordinal='0' />
                  <column datatype='string' name='Regional indicator' ordinal='1' />
                  <column datatype='real' name='Ladder score' ordinal='2' />
                  <column datatype='real' name='Standard error of ladder score' ordinal='3' />
                  <column datatype='real' name='upperwhisker' ordinal='4' />
                  <column datatype='real' name='lowerwhisker' ordinal='5' />
                  <column datatype='real' name='Logged GDP per capita' ordinal='6' />
                  <column datatype='real' name='Social support' ordinal='7' />
                  <column datatype='real' name='Healthy life expectancy' ordinal='8' />
                  <column datatype='real' name='Freedom to make life choices' ordinal='9' />
                  <column datatype='real' name='Generosity' ordinal='10' />
                  <column datatype='real' name='Perceptions of corruption' ordinal='11' />
                  <column datatype='real' name='Ladder score in Dystopia' ordinal='12' />
                  <column datatype='real' name='Explained by: Log GDP per capita' ordinal='13' />
                  <column datatype='real' name='Explained by: Social support' ordinal='14' />
                  <column datatype='real' name='Explained by: Healthy life expectancy' ordinal='15' />
                  <column datatype='real' name='Explained by: Freedom to make life choices' ordinal='16' />
                  <column datatype='real' name='Explained by: Generosity' ordinal='17' />
                  <column datatype='real' name='Explained by: Perceptions of corruption' ordinal='18' />
                  <column datatype='real' name='Dystopia + residual' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2020_Bottom 10 with lowest scores'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Bottom 10 Countries With Lowest Scores in 2020</run>
            <run>
Haiti is no longer in the bottom 10. Afghanistan has moved from being the 3rd most unhappy country in 2019 to being the most unhappy country in 2020
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020 Happiness Data' name='federated.1evd1u91y6hr8b1306qae1vnir5u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1evd1u91y6hr8b1306qae1vnir5u'>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Ladder score]' role='measure' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ladder score]' derivation='Sum' name='[sum:Ladder score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Ladder score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]' />
              <text column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</rows>
        <cols>[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]</cols>
      </table>
      <simple-id uuid='{423984AD-1C4E-45B8-8D5A-84DB6DD78F65}' />
    </worksheet>
    <worksheet name='2020_Top 10 Countries With Highest Scores'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Top 10 Countries With Highest Scores in 2020</run>
            <run>
Finland remains the happiest country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020 Happiness Data' name='federated.1evd1u91y6hr8b1306qae1vnir5u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1evd1u91y6hr8b1306qae1vnir5u'>
            <column datatype='string' name='[Country name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Ladder score]' role='measure' type='quantitative' />
            <column-instance column='[Country name]' derivation='None' name='[none:Country name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ladder score]' derivation='Sum' name='[sum:Ladder score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Ladder score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]' />
              <text column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</rows>
        <cols>[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]</cols>
      </table>
      <simple-id uuid='{5A493112-6806-4508-B332-6BD5002451E8}' />
    </worksheet>
    <worksheet name='Average social support score by region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Average Social Support Score by Region</run>
            <run>
Sub-Saharan Africa had the highest average social support score, compared to the other regions
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2020 Happiness Data' name='federated.1evd1u91y6hr8b1306qae1vnir5u' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1evd1u91y6hr8b1306qae1vnir5u'>
            <column datatype='string' name='[Regional indicator]' role='dimension' type='nominal' />
            <column datatype='real' name='[Social support]' role='measure' type='quantitative' />
            <column-instance column='[Regional indicator]' derivation='None' name='[none:Regional indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Social support]' derivation='Sum' name='[sum:Social support:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Social support:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Regional indicator:nk]' />
              <wedge-size column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Social support:qk]' />
              <size column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Social support:qk]' />
              <text column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Regional indicator:nk]' />
              <text column='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Social support:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{898783EF-052E-43A6-9C00-6593C33236E9}' />
    </worksheet>
    <worksheet name='Bottom 10 Countries with Lowest Scores'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Bottom 10 Countries With Lowest Scores in 2019</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019 Happiness Data (2019 Happiness data_2)' name='federated.1pu5k6n1opqw2g1b9vdfx06oc0br' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pu5k6n1opqw2g1b9vdfx06oc0br'>
            <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country or region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' />
              <text column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</rows>
        <cols>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]</cols>
      </table>
      <simple-id uuid='{9565AD62-30D3-411D-9C00-BAE7A4BE0F64}' />
    </worksheet>
    <worksheet name='Countries by life expectancy score'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Countries by Life Expectancy Score (2019)</run>
            <run>
Although Singapore is not part of the top 10 happiest countries, it has the highest life expectancy score</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019 Happiness Data (2019 Happiness data_2)' name='federated.1pu5k6n1opqw2g1b9vdfx06oc0br' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pu5k6n1opqw2g1b9vdfx06oc0br'>
            <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Healthy life expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Perceptions of corruption]' role='measure' type='quantitative' />
            <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Healthy life expectancy]' derivation='Sum' name='[sum:Healthy life expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perceptions of corruption]' derivation='Sum' name='[sum:Perceptions of corruption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' />
              <text column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]' />
              <lod column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Perceptions of corruption:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</rows>
        <cols>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]</cols>
      </table>
      <simple-id uuid='{8C8DD2D6-1866-4818-BE6F-AC588E280B4E}' />
    </worksheet>
    <worksheet name='Countries by score and Healthy Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Countries by Score and Healthy Life Expectancy (2019)</run>
            <run>
Generally, as the country happiness score reduces, there is a trend towards a reduction in healthy life expectancy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019 Happiness Data (2019 Happiness data_2)' name='federated.1pu5k6n1opqw2g1b9vdfx06oc0br' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pu5k6n1opqw2g1b9vdfx06oc0br'>
            <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Healthy life expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Healthy life expectancy]' derivation='Sum' name='[sum:Healthy life expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]&quot;</bucket>
              <bucket>&quot;[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Ivory Coast&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</rows>
        <cols>([federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[:Measure Names] * [federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{46B8BCC8-4D7F-45E4-A7F7-02A26766C237}' />
    </worksheet>
    <worksheet name='Top 10 Countries with Highest Scores'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Top 10 Countries With Highest Scores in 2019</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2019 Happiness Data (2019 Happiness data_2)' name='federated.1pu5k6n1opqw2g1b9vdfx06oc0br' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pu5k6n1opqw2g1b9vdfx06oc0br'>
            <column datatype='string' name='[Country or region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column-instance column='[Country or region]' derivation='None' name='[none:Country or region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Score])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country or region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' />
              <text column='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</rows>
        <cols>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]</cols>
      </table>
      <simple-id uuid='{FDBB2337-5128-436E-AA9A-61DE6A9B9077}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='19/20 Bottom 10 Countries'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Bottom 10 Countries with Lowest Scores' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='2020_Bottom 10 with lowest scores' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Bottom 10 Countries with Lowest Scores' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='2020_Bottom 10 with lowest scores' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BA60C33E-D41F-43F9-8F72-2FF3649859E9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='19/20 Top 10 Countries'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Top 10 Countries with Highest Scores' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='2020_Top 10 Countries With Highest Scores' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Top 10 Countries with Highest Scores' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='2020_Top 10 Countries With Highest Scores' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{347F1752-A8D7-4D97-8923-1086EF3E3283}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Top 10 Countries with Highest Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B638C6BC-72AA-46AA-9C72-4C5E7AC23C27}' />
    </window>
    <window class='worksheet' name='2020_Top 10 Countries With Highest Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</field>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{35FAE358-6AB4-4EE3-8CBB-C5C274EFDAD5}' />
    </window>
    <window class='worksheet' name='Bottom 10 Countries with Lowest Scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{021B7676-0576-41F5-9F2F-4044C2EBE7DE}' />
    </window>
    <window class='worksheet' name='2020_Bottom 10 with lowest scores'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</field>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Ladder score:qk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6EBF1AE8-6B19-4F64-B532-2FFC7A02C099}' />
    </window>
    <window class='dashboard' name='19/20 Bottom 10 Countries'>
      <viewpoints>
        <viewpoint name='2020_Bottom 10 with lowest scores'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Bottom 10 Countries with Lowest Scores'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7F1C39B1-97A6-4298-B62E-4E4CC391F974}' />
    </window>
    <window class='dashboard' name='19/20 Top 10 Countries'>
      <viewpoints>
        <viewpoint name='2020_Top 10 Countries With Highest Scores'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Top 10 Countries with Highest Scores'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{06F94B06-358A-40BE-8370-AEA0C5BE86B4}' />
    </window>
    <window class='worksheet' name='Countries by life expectancy score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:Healthy life expectancy:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{588B79D6-3837-423F-A65E-41936C8032D2}' />
    </window>
    <window class='worksheet' name='Countries by score and Healthy Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Regional indicator:nk]</field>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Generosity:qk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[sum:GDP per capita:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87358E95-3B0E-4C69-A699-76BEB6B679E0}' />
    </window>
    <window class='worksheet' maximized='true' name='Average social support score by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Regional indicator:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1evd1u91y6hr8b1306qae1vnir5u].[sum:Social support:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Country name:nk]</field>
            <field>[federated.1evd1u91y6hr8b1306qae1vnir5u].[none:Regional indicator:nk]</field>
            <field>[federated.1pu5k6n1opqw2g1b9vdfx06oc0br].[none:Country or region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{219E0CF7-6A8D-429E-8F92-26DB19898840}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='19/20 Bottom 10 Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='19/20 Top 10 Countries' width='192'>
      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
      /wct/BS9NvLZ3wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2020_Bottom 10 with lowest scores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2020_Top 10 Countries With Highest Scores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average social support score by region' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Bottom 10 Countries with Lowest Scores' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countries by life expectancy score' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countries by score and Healthy Life Expectancy' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Countries with Highest Scores' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
